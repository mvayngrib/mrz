(function(b,c){'object'==typeof exports&&'object'==typeof module?module.exports=c():'function'==typeof define&&define.amd?define([],c):'object'==typeof exports?exports.mrz=c():b.mrz=c()})(this,function(){return function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={exports:{},id:d,loaded:!1};return a[d].call(e.exports,e,e.exports,b),e.loaded=!0,e.exports}var c={};return b.m=a,b.c=c,b.p='',b(0)}([function(a,b,c){'use strict';const d=c(1),e=c(2);a.exports={COUNTRIES:d,parse:e}},function(a){'use strict';a.exports={ABW:'Aruba',AFG:'Afghanistan',AGO:'Angola',AIA:'Anguilla',ALA:'\xC5land Islands',ALB:'Albania',AND:'Andorra',ARE:'United Arab Emirates',ARG:'Argentina',ARM:'Armenia',ASM:'American Samoa',ATA:'Antarctica',ATF:'French Southern Territories',ATG:'Antigua and Barbuda',AUS:'Australia',AUT:'Austria',AZE:'Azerbaijan',BDI:'Burundi',BEL:'Belgium',BEN:'Benin',BES:'Bonaire, Sint Eustatius and Saba',BFA:'Burkina Faso',BGD:'Bangladesh',BGR:'Bulgaria',BHR:'Bahrain',BHS:'Bahamas',BIH:'Bosnia and Herzegovina',BLM:'Saint Barth\xE9lemy',BLR:'Belarus',BLZ:'Belize',BMU:'Bermuda',BOL:'Bolivia, Plurinational State of',BRA:'Brazil',BRB:'Barbados',BRN:'Brunei Darussalam',BTN:'Bhutan',BVT:'Bouvet Island',BWA:'Botswana',CAF:'Central African Republic',CAN:'Canada',CCK:'Cocos (Keeling) Islands',CHE:'Switzerland',CHL:'Chile',CHN:'China',CIV:'C\xF4te d\'Ivoire',CMR:'Cameroon',COD:'Congo, the Democratic Republic of the',COG:'Congo',COK:'Cook Islands',COL:'Colombia',COM:'Comoros',CPV:'Cabo Verde',CRI:'Costa Rica',CUB:'Cuba',CUW:'Cura\xE7ao',CXR:'Christmas Island',CYM:'Cayman Islands',CYP:'Cyprus',CZE:'Czechia',D:'Germany',DEU:'Germany',DJI:'Djibouti',DMA:'Dominica',DNK:'Denmark',DOM:'Dominican Republic',DZA:'Algeria',ECU:'Ecuador',EGY:'Egypt',ERI:'Eritrea',ESH:'Western Sahara',ESP:'Spain',EST:'Estonia',ETH:'Ethiopia',FIN:'Finland',FJI:'Fiji',FLK:'Falkland Islands (Malvinas)',FRA:'France',FRO:'Faroe Islands',FSM:'Micronesia, Federated States of',GAB:'Gabon',GBD:'British Overseas Territories Citizen (BOTC)',GBN:'British National (Overseas)',GBO:'British Overseas Citizen',GBP:'British Protected Person',GBR:'United Kingdom',GBS:'British Subject',GEO:'Georgia',GGY:'Guernsey',GHA:'Ghana',GIB:'Gibraltar',GIN:'Guinea',GLP:'Guadeloupe',GMB:'Gambia',GNB:'Guinea-Bissau',GNQ:'Equatorial Guinea',GRC:'Greece',GRD:'Grenada',GRL:'Greenland',GTM:'Guatemala',GUF:'French Guiana',GUM:'Guam',GUY:'Guyana',HKG:'Hong Kong',HMD:'Heard Island and McDonald Islands',HND:'Honduras',HRV:'Croatia',HTI:'Haiti',HUN:'Hungary',IDN:'Indonesia',IMN:'Isle of Man',IND:'India',IOT:'British Indian Ocean Territory',IRL:'Ireland',IRN:'Iran, Islamic Republic of',IRQ:'Iraq',ISL:'Iceland',ISR:'Israel',ITA:'Italy',JAM:'Jamaica',JEY:'Jersey',JOR:'Jordan',JPN:'Japan',KAZ:'Kazakhstan',KEN:'Kenya',KGZ:'Kyrgyzstan',KHM:'Cambodia',KIR:'Kiribati',KNA:'Saint Kitts and Nevis',KOR:'Korea, Republic of',KWT:'Kuwait',LAO:'Lao People\'s Democratic Republic',LBN:'Lebanon',LBR:'Liberia',LBY:'Libya',LCA:'Saint Lucia',LIE:'Liechtenstein',LKA:'Sri Lanka',LSO:'Lesotho',LTU:'Lithuania',LUX:'Luxembourg',LVA:'Latvia',MAC:'Macao',MAF:'Saint Martin (French part)',MAR:'Morocco',MCO:'Monaco',MDA:'Moldova, Republic of',MDG:'Madagascar',MDV:'Maldives',MEX:'Mexico',MHL:'Marshall Islands',MKD:'Macedonia, the former Yugoslav Republic of',MLI:'Mali',MLT:'Malta',MMR:'Myanmar',MNE:'Montenegro',MNG:'Mongolia',MNP:'Northern Mariana Islands',MOZ:'Mozambique',MRT:'Mauritania',MSR:'Montserrat',MTQ:'Martinique',MUS:'Mauritius',MWI:'Malawi',MYS:'Malaysia',MYT:'Mayotte',NAM:'Namibia',NCL:'New Caledonia',NER:'Niger',NFK:'Norfolk Island',NGA:'Nigeria',NIC:'Nicaragua',NIU:'Niue',NLD:'Netherlands',NOR:'Norway',NPL:'Nepal',NRU:'Nauru',NZL:'New Zealand',OMN:'Oman',PAK:'Pakistan',PAN:'Panama',PCN:'Pitcairn',PER:'Peru',PHL:'Philippines',PLW:'Palau',PNG:'Papua New Guinea',POL:'Poland',PRI:'Puerto Rico',PRK:'Korea, Democratic People\'s Republic of',PRT:'Portugal',PRY:'Paraguay',PSE:'Palestine, State of',PYF:'French Polynesia',QAT:'Qatar',REU:'R\xE9union',ROU:'Romania',RUS:'Russian Federation',RWA:'Rwanda',SAU:'Saudi Arabia',SDN:'Sudan',SEN:'Senegal',SGP:'Singapore',SGS:'South Georgia and the South Sandwich Islands',SHN:'Saint Helena, Ascension and Tristan da Cunha',SJM:'Svalbard and Jan Mayen',SLB:'Solomon Islands',SLE:'Sierra Leone',SLV:'El Salvador',SMR:'San Marino',SOM:'Somalia',SPM:'Saint Pierre and Miquelon',SRB:'Serbia',SSD:'South Sudan',STP:'Sao Tome and Principe',SUR:'Suriname',SVK:'Slovakia',SVN:'Slovenia',SWE:'Sweden',SWZ:'Swaziland',SXM:'Sint Maarten (Dutch part)',SYC:'Seychelles',SYR:'Syrian Arab Republic',TCA:'Turks and Caicos Islands',TCD:'Chad',TGO:'Togo',THA:'Thailand',TJK:'Tajikistan',TKL:'Tokelau',TKM:'Turkmenistan',TLS:'Timor-Leste',TON:'Tonga',TTO:'Trinidad and Tobago',TUN:'Tunisia',TUR:'Turkey',TUV:'Tuvalu',TWN:'Taiwan, Province of China',TZA:'Tanzania, United Republic of',UGA:'Uganda',UKR:'Ukraine',UMI:'United States Minor Outlying Islands',UNA:'specialized agency of the United Nations',UNK:'Resident of Kosovo issued byUNMIK',UNO:'United Nations organization',URY:'Uruguay',USA:'United States of America',UZB:'Uzbekistan',VAT:'Holy See (Vatican City State)',VCT:'Saint Vincent and the Grenadines',VEN:'Venezuela, Bolivarian Republic of',VGB:'Virgin Islands, British',VIR:'Virgin Islands, U.S.',VNM:'Viet Nam',VUT:'Vanuatu',WLF:'Wallis and Futuna',WSA:'World Service Authority World Passport',WSM:'Samoa',XOM:'Sovereign Military Order of Malta',XXA:'Stateless person',XXB:'Refugee, as per the 1951 Convention',XXC:'Refugee, other than defined above',XXX:'Unspecified nationality',YEM:'Yemen',ZAF:'South Africa',ZMB:'Zambia',ZWE:'Zimbabwe'}},function(a,b,c){'use strict';var d=c(3),e=c(5),f=c(6);a.exports=function(h){var j=h.split(/[\r\n]+/),k={logs:[]};switch(j.length){case 2:k=41>j[0].length?e(j):f(j);break;case 3:k=d(j);break;default:k.logs.push('We need 2 or 3 lines');}return k}},function(a,b,c){'use strict';var{check:d,parseText:e,parseCountry:f,parseDate:g,parseSex:h,parseDocumentNumber:j,parseDocumentType:k}=c(4);a.exports=function(m){var n={isValid:!0},o=[];o.push('Parsing TD1 format');var p=m[0];30!==p.length&&(n.isValid=!1,o.push('First line does not have 30 symbols'));var q=m[1];30!==q.length&&(n.isValid=!1,o.push('Second line does not have 30 symbols'));var r=m[2];return 30!==r.length&&(n.isValid=!1,o.push('Third line does not have 30 symbols')),n.format='TD3',n.documentType=k(p.substring(0,2)),n.issuingCountry=f(e(p,2,5)),n.optional1=e(p,15,30),n.documentNumber=j(e(p,5,14),p.substr(14,1),n.optional1),n.birthDate=g(e(q,0,6),q.substr(6,1)),n.sex=h(q.substr(7,1)),n.expirationDate=g(e(q,8,14),q.substr(14,1)),n.nationality=f(e(q,15,18),q.substr(18,1)),n.optional2=e(q,18,29),n.isValid&&(n.isValid=d(p.substring(5,30)+q.substring(0,7)+q.substring(8,15)+q.substring(18,29),q.substr(29,1))),n.lastname=e(r,0,30).replace(/ {2}.*/,''),n.firstname=e(r,0,30).replace(/.* {2}/,''),o.push('TD1 parse completed'),n.logs=o,n}},function(a,b,c){'use strict';function d(g,h){var j=0,k=[7,3,1];for(var l=0;l<g.length;l++){var m=g.charCodeAt(l);60===m&&(m=0),65<=m&&(m-=55),48<=m&&(m-=48),m*=k[l%3],j+=m}return j%10===+h}function e(g,h,j){return g.substring(h,j).replace(/<+$/g,'').replace(/</g,' ')}const f=c(1);a.exports={check:d,parseText:e,parseCountry:function(h){var j=f[h],k={code:h,name:j,isValid:!0};return j||(k.isValid=!1,k.error='The country code "'+h+'" is unknown'),k},parseDate:function(h,j){var k={};return k.year=h.substring(0,2),k.month=h.substring(2,4),k.day=h.substring(4,6),k.isValid=d(h,j),k.isValid||(k.error='Check digit "'+j+'" not valid'),(1>k.month||12<k.month)&&(k.error='Month "'+k.month+'" not valid'),(1>k.day||31<k.day)&&(k.error='Day "'+k.day+'" not valid'),k},parseSex:function(h){var j='';''===h&&(j='Unknown'),'M'===h&&(j='Masculin'),'F'===h&&(j='F\xE9minin');var k={code:h,label:j,isValid:!0};return j||(k.isValid=!1,k.error=`The sex "${h}" is incorrect. Allowed values: M, F or <.`),k},parseDocumentNumber:function(h,j,k){'<'===j&&k&&(k=k.replace(/<.*/,''),h+=k.substring(0,k.length-1),j=k.charAt(k.length-1));var l={value:h,isValid:d(h,j)};return l.isValid||(l.error='Check digit "'+j+'" not valid'),l},parseDocumentType:function(h){var j={code:h.substring(0,1),label:'',type:e(h.substring(1,2)),isValid:!0};switch(j.code){case'P':j.label='Passport';break;case'I':j.label='Identity card';break;case'A':j.label='';break;case'C':j.label='';break;default:j.isValid=!1,j.error='Document type must be either P, I, A or C';}return'V'===j.type&&(j.isValid=!1,j.error='Document type (second symbol) may not be V'),j}}},function(a,b,c){'use strict';var{check:d,parseText:e,parseCountry:f,parseDate:g,parseSex:h,parseDocumentNumber:j,parseDocumentType:k}=c(4);a.exports=function(m){var n={isValid:!0},o=[];o.push('Parsing TD2 format');var p=m[0];36!==p.length&&(n.isValid=!1,o.push('First line does not have 36 symbols'));var q=m[1];return 36!==q.length&&(n.isValid=!1,o.push('Second line does not have 36 symbols')),n.format='TD2',n.documentType=k(p.substring(0,2)),n.issuingCountry=f(e(p,2,5)),n.lastname=e(p,5,36).replace(/ {2}.*/,''),n.firstname=e(p,5,36).replace(/.* {2}/,''),n.documentNumber=j(e(q,0,9),q.substr(9,1),q.substr(28,35)),n.nationality=f(e(q,10,13)),n.birthDate=g(e(q,13,19),q.substr(19,1)),n.sex=h(e(q,20,21)),n.expirationDate=g(e(q,21,27),q.substr(27,1)),n.isValid&&(n.isValid=d(q.substring(0,10)+q.substring(13,20)+q.substring(21,35),q.substr(35,1))),o.push('TD2 parse completed'),n.logs=o,n}},function(a,b,c){'use strict';var{check:d,parseText:e,parseCountry:f,parseDate:g,parseSex:h,parseDocumentNumber:j,parseDocumentType:k}=c(4);a.exports=function(m){var n={isValid:!0},o=[];o.push('Parsing TD3 format');var p=m[0];44!==p.length&&(n.isValid=!1,o.push('First line does not have 44 symbols'));var q=m[1];return 44!==q.length&&(n.isValid=!1,o.push('Second line does not have 44 symbols')),n.format='TD3',n.documentType=k(p.substring(0,2)),n.issuingCountry=f(e(p,2,5)),n.lastname=e(p,5,50).replace(/ {2}.*/,''),n.firstname=e(p,5,50).replace(/.* {2}/,''),n.documentNumber=j(e(q,0,9),q.substr(9,1)),n.nationality=f(e(q,10,13)),n.birthDate=g(e(q,13,19),q.substr(19,1)),n.sex=h(e(q,20,21)),n.expirationDate=g(e(q,21,27),q.substr(27,1)),n.personalNumber={value:e(q,28,42)},n.personalNumber.isValid=d(q.substring(28,42),q.substr(42,1)),n.isValid&&(n.isValid=d(q.substring(0,10)+q.substring(13,20)+q.substring(21,43),q.substr(43,1))),o.push('TD3 parse completed'),n.logs=o,n}}])});
//# sourceMappingURL=mrz.min.js.map